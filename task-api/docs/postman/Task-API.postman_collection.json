{
	"info": {
		"_postman_id": "fad307c5-f408-4171-afd1-b440fae12c67",
		"name": "Task API (Local) - Kanban",
		"description": "Collection de pruebas para el backend AdonisJS del Task Management System.\nIncluye CRUD de tareas, soft delete/restore, comentarios y adjuntos (upload y descarga).",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33629302"
	},
	"item": [
		{
			"name": "Tasks",
			"item": [
				{
					"name": "Listar tareas por estado",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status 200', () => pm.response.code === 200);",
									"pm.test('Respuesta es array', () => Array.isArray(pm.response.json()));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/tasks?status={{status}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "status",
									"value": "{{status}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Contadores por estado",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status 200', () => pm.response.code === 200);",
									"const j = pm.response.json();",
									"['in_progress','reviews','completed','done'].forEach(k => pm.expect(typeof j[k]).to.equal('number'));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/tasks/counts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tasks",
								"counts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Crear tarea",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"201 Created\", () => pm.response.code === 201);",
									"const json = pm.response.json();",
									"pm.expect(json).to.have.property(\"id\");",
									"pm.environment.set(\"taskId\", json.id); ",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"packages": {},
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"title\": \"Postman created task\", \"status\": \"in_progress\"}"
						},
						"url": {
							"raw": "{{baseUrl}}/tasks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener tarea por id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status 200', () => pm.response.code === 200);",
									"pm.test('Tiene id pedido', () => pm.response.json().id == pm.collectionVariables.get('taskId'));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/tasks/{{taskId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tasks",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Actualizar tarea (cambiar status)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status 200', () => pm.response.code === 200);",
									"pm.test('Status actualizado a done', () => pm.response.json().status === 'done');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"status\": \"done\"}"
						},
						"url": {
							"raw": "{{baseUrl}}/tasks/{{taskId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tasks",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Soft delete tarea",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status 200', () => pm.response.code === 200);",
									"pm.test('Marcada como borrada', () => !!pm.response.json().deleted_at);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/tasks/{{taskId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tasks",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Listar eliminadas (papelera)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/tasks/deleted",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tasks",
								"deleted"
							]
						}
					},
					"response": []
				},
				{
					"name": "Restaurar tarea",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/tasks/{{taskId}}/restore",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tasks",
								"{{taskId}}",
								"restore"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Comments",
			"item": [
				{
					"name": "Listar comentarios",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/tasks/{{taskId}}/comments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tasks",
								"{{taskId}}",
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Crear comentario",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"201 Created\", () => pm.response.code === 201);\r",
									"\r",
									"const json = pm.response.json();\r",
									"pm.expect(json).to.have.property(\"id\");\r",
									"pm.environment.set(\"commentId\", json.id);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"comment\": \"Comentario de prueba (Postman)\"}"
						},
						"url": {
							"raw": "{{baseUrl}}/tasks/{{taskId}}/comments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tasks",
								"{{taskId}}",
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Actualizar comentario",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"comment\": \"Comentario actualizado\"}"
						},
						"url": {
							"raw": "{{baseUrl}}/tasks/{{taskId}}/comments/{{commentId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tasks",
								"{{taskId}}",
								"comments",
								"{{commentId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Eliminar comentario",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/tasks/{{taskId}}/comments/{{commentId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tasks",
								"{{taskId}}",
								"comments",
								"{{commentId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Attachments",
			"item": [
				{
					"name": "Listar adjuntos",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/tasks/{{taskId}}/attachments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tasks",
								"{{taskId}}",
								"attachments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Subir adjunto (form-data)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"201 Created\", () => pm.response.code === 201);\r",
									"\r",
									"const json = pm.response.json();\r",
									"pm.expect(json).to.have.property(\"id\");\r",
									"pm.environment.set(\"attachmentId\", json.id);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/C:/Franky_Zone/Projects/!Prueba Tecnica/image.png"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/tasks/{{taskId}}/attachments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tasks",
								"{{taskId}}",
								"attachments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Descargar adjunto",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/attachments/{{attachmentId}}/download",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"attachments",
								"{{attachmentId}}",
								"download"
							]
						}
					},
					"response": []
				},
				{
					"name": "Eliminar adjunto",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/attachments/{{attachmentId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"attachments",
								"{{attachmentId}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "status",
			"value": "in_progress"
		},
		{
			"key": "taskId",
			"value": ""
		}
	]
}